""" Test case """

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("width", 89)

##Test case for value other than integer
........................................

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  ...
TypeError: name must be an integer

>>> bg.integer_validator("Name", True)
Traceback (most recent call last):
  ...
TypeError: Name must be an integer

>>> bg.integer_validator("Name", [])
Traceback (most recent call last):
  ...
TypeError: Name must be an integer

##Test case for value less than or equal to 0
.............................................

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  ...
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
  ...
ValueError: distance must be greater than 0

>>> bg.integer_validator("Nane", {3,4})
Traceback (most recent call last):
  ...
TypeError: Nane must be an integer
>>> bg.integer_validator("Nane", None)
Traceback (most recent call last):
  ...
TypeError: Nane must be an integer
>>> bg.integer_validator("Nane", (4,))
Traceback (most recent call last):
  ...
TypeError: Nane must be an integer
>>> bg.area()
Traceback (most recent call last):
  ...
Exception: area() is not implemented
>>> bg.integer_validator("Nane")
Traceback (most recent call last):
  ...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

